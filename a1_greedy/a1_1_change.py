'''
거스름돈 - 그리디 알고리즘의 대표문제

# 당신은 음점의 계산을 도와주는 점원이다. 
카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원 짜리 동전이 무한히 존재한다고 가정한다.

손님에게 거슬러줘야할 돈이 N원일 때, 거슬러줘야 할 동전의 최소 개수를 구하라.
단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

'''

def change() :
    cnt = 0
    coin_types = [500,100,50,10] # 큰단위의 화폐부터 차례로 확인
    
    n = int(input('최소 10단위의 거스름돈을 입력하세요: '))
    
    for c in coin_types :
        cnt += n // c
        n =  n % c
    return cnt

print(change()) 

# 시간복잡도 : O(N) : 상수형 
    # :: 이 알고리즘의 시간 복잡도는 동전의 '총 종류 수: len(coin_types)' 에만 영향을 받고, 거슬러 줘야하는 금액의 크기(n) 와는 무관하다.